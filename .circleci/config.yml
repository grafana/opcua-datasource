version: 2.1

parameters:
  ssh-fingerprint:
    type: string
    default: ${GITHUB_SSH_FINGERPRINT}

aliases:
  # Workflow filters
  - &filter-only-master
    branches:
      only: master
  - &filter-only-release
    branches:
      only: /^v[1-9]*[0-9]+\.[1-9]*[0-9]+\.x$/

workflows:
  plugin_workflow:
    jobs:
      - build
      - build_backend_linux
      - build_backend_windows
      - build_backend_darwin
      - package:
          requires:
            - build
            - build_backend_linux
            - build_backend_windows
            - build_backend_darwin
      # - report:
      #     requires:
      #       - package
      - approve_release:
          type: approval
          requires:
            - package
          filters: *filter-only-release
      - publish_github_release:
          requires:
            - approve_release
          filters: *filter-only-release

executors:
  default_exec: # declares a reusable executor
    docker:
      - image: srclosson/grafana-plugin-ci-alpine:latest
  e2e_exec:
    docker:
      - image: srclosson/grafana-plugin-ci-e2e:latest
  dotnet_exec:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:3.1

jobs:
  build:
    executor: default_exec
    steps:
      - checkout
      - restore_cache:
          name: restore node_modules
          keys:
          - build-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: |
            mkdir ci
            [ -f ~/project/node_modules/.bin/grafana-toolkit ] || yarn install --frozen-lockfile
            /bin/rm -rf node_modules/@grafana/data/node_modules || true
      - save_cache:
          name: save node_modules
          paths:
            - ~/project/node_modules
          key: build-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - save_cache:
          name: save cypress cache
          paths:
            - ~/.cache/Cypress
          key: cypress-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - run:
          name: Build and test frontend
          command: |
            ./node_modules/.bin/grafana-toolkit plugin:ci-build
            ./node_modules/.bin/grafana-toolkit plugin:ci-build --finish
      - persist_to_workspace:
          root: .
          paths:
            - ci

  build_backend_linux:
    executor: dotnet_exec
    steps:
      - checkout
      - run:
          name: Build backend (Linux)
          command: |
            [ ! -d "ci/dist/linux" ] && mkdir -pv ci/dist/linux
            dotnet publish ./backend/.linux.build.csproj -r linux-x64 -o ci/dist/linux --self-contained true
      - persist_to_workspace:
          root: .
          paths:
          - ci/dist/linux
    
  build_backend_darwin:
    executor: dotnet_exec
    steps:
      - checkout
      - run:
          name: Build backend (OSX)
          command: |
            [ ! -d "ci/dist/darwin" ] && mkdir -pv ci/dist/darwin
            dotnet publish ./backend/.osx.build.csproj -r osx-x64 -o ci/dist/darwin --self-contained true
      - persist_to_workspace:
          root: .
          paths:
          - ci/dist/darwin


  build_backend_windows:
    executor: dotnet_exec
    steps:
      - checkout
      - run:
          name: Build backend (Windows)
          command: |
            [ ! -d "ci/dist/windows" ] && mkdir -pv ci/dist/windows
            dotnet publish ./backend/.win.build.csproj -r win-x64 -o ci/dist/windows --self-contained true
      - persist_to_workspace:
          root: .
          paths:
          - ci/dist/windows

  
  package:
    executor: default_exec
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          name: restore node_modules
          keys:
          - build-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - run:
          name: Package distribution
          command: |
            set -e
            mv ci/jobs/build ci/jobs/build_frontend
            EXEC_PREFIX=`cat ci/jobs/build_frontend/dist/plugin.json|jq '.executable'| sed s/\"//g`
            PLUGIN_NAME=`cat ci/jobs/build_frontend/dist/plugin.json|jq '.id'| sed s/\"//g`
            VERSION=`cat ci/jobs/build_frontend/dist/plugin.json|jq '.info.version'| sed s/\"//g`
            echo "Plugin Name: ${PLUGIN_NAME}"
            echo "Plugin Version: ${VERSION}"
            echo "Plugin Exec Prefix: ${EXEC_PREFIX}"
            mkdir -pv ci/jobs/build_backend
            mkdir -pv ci/jobs/packages
            mv ci/dist/linux ci/jobs/build_backend
            mv ci/dist/windows ci/jobs/build_backend
            mv ci/dist/darwin ci/jobs/build_backend


            mv -v ci/jobs/build_backend/linux ci/jobs/build_backend/dist
            ./node_modules/.bin/grafana-toolkit plugin:ci-package --signatureType private --rootUrls http://localhost:3000
            mv -v ci/jobs/build_backend/dist ci/jobs/build_backend/linux
            mv -v ci/packages/${PLUGIN_NAME}-${VERSION}.zip \
              ci/jobs/packages/${PLUGIN_NAME}-${VERSION}.linux_amd64.zip
            mv -v ci/packages/${PLUGIN_NAME}-${VERSION}.zip.sha1 \
              ci/jobs/packages/${PLUGIN_NAME}-${VERSION}.linux_amd64.zip.sha1
            mv -v ci/packages/info.json ci/jobs/packages/info-linux.json
            sed -i 's/zip/linux_amd64\.zip/g' ci/jobs/packages/info-linux.json
            
            mv -v ci/jobs/build_backend/windows ci/jobs/build_backend/dist
            ./node_modules/.bin/grafana-toolkit plugin:ci-package --signatureType private --rootUrls http://localhost:3000
            mv -v ci/jobs/build_backend/dist ci/jobs/build_backend/windows
            mv -v ci/packages/${PLUGIN_NAME}-${VERSION}.zip \
              ci/jobs/packages/${PLUGIN_NAME}-${VERSION}.windows_amd64.zip
            mv -v ci/packages/${PLUGIN_NAME}-${VERSION}.zip.sha1 \
              ci/jobs/packages/${PLUGIN_NAME}-${VERSION}.windows_amd64.zip.sha1
            mv -v ci/packages/info.json ci/jobs/packages/info-windows.json
            sed -i 's/zip/windows_amd64\.zip/g' ci/jobs/packages/info-windows.json

            mv -v ci/jobs/build_backend/darwin ci/jobs/build_backend/dist
            ./node_modules/.bin/grafana-toolkit plugin:ci-package --signatureType private --rootUrls http://localhost:3000
            mv -v ci/jobs/build_backend/dist ci/jobs/build_backend/darwin
            mv -v ci/packages/${PLUGIN_NAME}-${VERSION}.zip \
              ci/jobs/packages/${PLUGIN_NAME}-${VERSION}.darwin_amd64.zip
            mv -v ci/packages/${PLUGIN_NAME}-${VERSION}.zip.sha1 \
              ci/jobs/packages/${PLUGIN_NAME}-${VERSION}.darwin_amd64.zip.sha1
            mv -v ci/packages/info.json ci/jobs/packages/info-darwin.json
            sed -i 's/zip/darwin_amd64\.zip/g' ci/jobs/packages/info-darwin.json

            mv -fv ci/jobs/packages/* ci/packages/
            ls -l ci/packages
      - persist_to_workspace:
          root: .
          paths:
            - ci/packages
            - ci/dist
      - store_artifacts:
          path: ci/packages

  report:
    executor: default_exec
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          name: restore node_modules
          keys:
            - build-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - run:
          name: Toolkit report
          command: |
            ./node_modules/.bin/grafana-toolkit plugin:ci-report
      - persist_to_workspace:
          root: .
          paths:
          - ci
      - store_artifacts:
          path: ci

  publish_github_release:
    executor: default_exec
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          name: restore node_modules
          keys:
          - build-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - run:
          name: "Publish Release on GitHub"
          command: ./node_modules/.bin/grafana-toolkit plugin:github-publish

